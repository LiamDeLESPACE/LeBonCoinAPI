// <auto-generated />
using System;
using LeBonCoinAPI.Models.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LeBonCoinAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("ProfilSequence");

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Adresse", b =>
                {
                    b.Property<int>("AdresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AdresseId"));

                    b.Property<string>("CodeInsee")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("vil_codeinsee");

                    b.Property<int>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("adr_numero");

                    b.Property<string>("Rue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adr_rue");

                    b.HasKey("AdresseId");

                    b.ToTable("Adresse", (string)null);
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Annonce", b =>
                {
                    b.Property<int>("AnnonceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ann_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AnnonceId"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("ann_active");

                    b.Property<int>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<DateTime>("DatePublication")
                        .HasColumnType("date")
                        .HasColumnName("ann_datepublication");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("ann_description");

                    b.Property<int>("DureeMinimumSejour")
                        .HasColumnType("integer")
                        .HasColumnName("ann_dureeminimumsejour");

                    b.Property<int>("Etoile")
                        .HasColumnType("integer")
                        .HasColumnName("ann_etoile");

                    b.Property<int>("NombreChambres")
                        .HasColumnType("integer")
                        .HasColumnName("ann_nombrechambres");

                    b.Property<int>("NombrePersonnesMax")
                        .HasColumnType("integer")
                        .HasColumnName("ann_nombrepersonnesmax");

                    b.Property<double>("PrixParNuit")
                        .HasColumnType("double precision")
                        .HasColumnName("ann_prixparnuit");

                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ann_titre");

                    b.Property<int>("TypeLogementId")
                        .HasColumnType("integer")
                        .HasColumnName("tyl_id");

                    b.HasKey("AnnonceId");

                    b.ToTable("Annonce", (string)null);
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.CarteBancaire", b =>
                {
                    b.Property<int>("CarteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cab_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarteId"));

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("cab_numero");

                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.HasKey("CarteId");

                    b.ToTable("CarteBancaire", (string)null);
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Commentaire", b =>
                {
                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.Property<int>("ReservationId")
                        .HasColumnType("integer")
                        .HasColumnName("res_id");

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cmt_contenu");

                    b.HasKey("ProfilId", "ReservationId");

                    b.ToTable("t_j_commentaire_cmt");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Departement", b =>
                {
                    b.Property<string>("DepartementCode")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("dep_code");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("dep_nom");

                    b.HasKey("DepartementCode");

                    b.ToTable("Departement", (string)null);
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Equipement", b =>
                {
                    b.Property<int>("EquipementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("equ_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EquipementId"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("equ_nom");

                    b.Property<int>("TypeEquipementId")
                        .HasColumnType("integer")
                        .HasColumnName("tye_id");

                    b.HasKey("EquipementId");

                    b.ToTable("Equipement", (string)null);
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Favoris", b =>
                {
                    b.Property<int>("AnnonceId")
                        .HasColumnType("integer")
                        .HasColumnName("ann_id");

                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.HasKey("AnnonceId", "ProfilId");

                    b.ToTable("t_j_favoris_fav");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Photo", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pho_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PhotoId"));

                    b.Property<int>("AnnonceId")
                        .HasColumnType("integer")
                        .HasColumnName("ann_id");

                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pho_url");

                    b.HasKey("PhotoId");

                    b.ToTable("Photo", (string)null);
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.PossedeEquipement", b =>
                {
                    b.Property<int>("AnnonceId")
                        .HasColumnType("integer")
                        .HasColumnName("ann_id");

                    b.Property<int>("EquipementId")
                        .HasColumnType("integer")
                        .HasColumnName("equ_id");

                    b.HasKey("AnnonceId", "EquipementId");

                    b.ToTable("t_j_possedeequipement_peq");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Profil", b =>
                {
                    b.Property<int>("ProfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prf_id")
                        .HasDefaultValueSql("nextval('\"ProfilSequence\"')");

                    NpgsqlPropertyBuilderExtensions.UseSequence(b.Property<int>("ProfilId"));

                    b.Property<int>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<string>("HashMotDePasse")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("prf_hashmdp");

                    b.Property<string>("Telephone")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("prf_telephone");

                    b.HasKey("ProfilId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Reglement", b =>
                {
                    b.Property<string>("ReglementId")
                        .HasColumnType("text")
                        .HasColumnName("rgl_id");

                    b.Property<int>("ReservationId")
                        .HasColumnType("integer")
                        .HasColumnName("res_id");

                    b.HasKey("ReglementId");

                    b.ToTable("Reglement", (string)null);
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("res_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReservationId"));

                    b.Property<int>("AnnonceId")
                        .HasColumnType("integer")
                        .HasColumnName("ann_id");

                    b.Property<DateTime>("DateArrivee")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("res_datearrivee");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("res_datedepart");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("res_nom");

                    b.Property<int>("NombreVoyageur")
                        .HasColumnType("integer")
                        .HasColumnName("res_nombrevoyageur");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("res_prenom");

                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("res_telephone");

                    b.HasKey("ReservationId");

                    b.ToTable("Reservation", (string)null);
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.SecteurActivite", b =>
                {
                    b.Property<int>("SecteurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sct_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SecteurId"));

                    b.Property<string>("NomSecteur")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("sct_nomsecteur");

                    b.HasKey("SecteurId");

                    b.ToTable("SecteurActivite", (string)null);
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Signale", b =>
                {
                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.Property<int>("AnnonceId")
                        .HasColumnType("integer")
                        .HasColumnName("ann_id");

                    b.HasKey("ProfilId", "AnnonceId");

                    b.ToTable("t_j_signale_sig");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.TypeEquipement", b =>
                {
                    b.Property<int>("TypeEquipementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tye_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeEquipementId"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tye_nom");

                    b.HasKey("TypeEquipementId");

                    b.ToTable("TypeEquipement", (string)null);
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.TypeLogement", b =>
                {
                    b.Property<int>("TypeLogementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tyl_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeLogementId"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tyl_nom");

                    b.HasKey("TypeLogementId");

                    b.ToTable("TypeLogement", (string)null);
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Ville", b =>
                {
                    b.Property<string>("CodeInsee")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("vil_codeinsee");

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("vil_codepostal");

                    b.Property<string>("DepartementCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("dep_code");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("vil_nom");

                    b.HasKey("CodeInsee");

                    b.ToTable("Ville", (string)null);
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Admin", b =>
                {
                    b.HasBaseType("LeBonCoinAPI.Models.EntityFramework.Profil");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adm_email");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("adm_service");

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Entreprise", b =>
                {
                    b.HasBaseType("LeBonCoinAPI.Models.EntityFramework.Profil");

                    b.Property<string>("Nom")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ent_nom");

                    b.Property<int>("SecteurId")
                        .HasColumnType("integer")
                        .HasColumnName("sct_id");

                    b.Property<string>("Siret")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("ent_siret");

                    b.ToTable("Entreprise", (string)null);
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Particulier", b =>
                {
                    b.HasBaseType("LeBonCoinAPI.Models.EntityFramework.Profil");

                    b.Property<string>("Civilite")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("prt_civilite");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("prt_datenaissance");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("prt_email");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prt_nom");

                    b.Property<string>("Prenom")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prt_prenom");

                    b.ToTable("Particulier", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
