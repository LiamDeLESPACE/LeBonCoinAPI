// <auto-generated />
using System;
using LeBonCoinAPI.Models.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LeBonCoinAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Adresse", b =>
                {
                    b.Property<int>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<string>("CodeInsee")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character(5)")
                        .HasColumnName("vil_codeinsee")
                        .IsFixedLength();

                    b.Property<int>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("adr_numero");

                    b.Property<string>("Rue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adr_rue");

                    b.HasKey("AdresseId")
                        .HasName("pk_adr");

                    b.HasIndex(new[] { "AdresseId" }, "adr_pk")
                        .IsUnique();

                    b.HasIndex(new[] { "CodeInsee" }, "fk_adr_vil");

                    b.ToTable("t_e_adresse_adr");

                    b.HasCheckConstraint("ck_adr_adressenum", "adr_adressenum between 0 and 1000");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Annonce", b =>
                {
                    b.Property<int>("AnnonceId")
                        .HasColumnType("integer")
                        .HasColumnName("ann_id");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("ann_active");

                    b.Property<int>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<DateTime>("DatePublication")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("ann_datepublication")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ann_description");

                    b.Property<int>("DureeMinimumSejour")
                        .HasColumnType("integer")
                        .HasColumnName("ann_dureeminimumsejour");

                    b.Property<int>("Etoile")
                        .HasColumnType("integer")
                        .HasColumnName("ann_etoile");

                    b.Property<int>("NombreChambres")
                        .HasColumnType("integer")
                        .HasColumnName("ann_nombrechambres");

                    b.Property<int>("NombrePersonnesMax")
                        .HasColumnType("integer")
                        .HasColumnName("ann_nombrepersonnesmax");

                    b.Property<double>("PrixParNuit")
                        .HasColumnType("double precision")
                        .HasColumnName("ann_prixparnuit");

                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ann_titre");

                    b.Property<int>("TypeLogementId")
                        .HasColumnType("integer")
                        .HasColumnName("tyl_id");

                    b.HasKey("AnnonceId")
                        .HasName("pk_ann");

                    b.HasIndex(new[] { "AnnonceId" }, "ann_pk")
                        .IsUnique();

                    b.HasIndex(new[] { "AdresseId" }, "fk_ann_adr");

                    b.HasIndex(new[] { "ProfilId" }, "fk_ann_prf");

                    b.HasIndex(new[] { "TypeLogementId" }, "fk_ann_tyl");

                    b.ToTable("t_e_annonce_ann");

                    b.HasCheckConstraint("ck_ann_active", "ann_active in ('FALSE', 'TRUE')");

                    b.HasCheckConstraint("ck_ann_dureeminimumsejour", "ann_dureeminimumsejour > 0");

                    b.HasCheckConstraint("ck_ann_etoile", "ann_etoile > 0 AND ann_etoile <= 5");

                    b.HasCheckConstraint("ck_ann_nombrechambres", "ann_nombrechambres > 0");

                    b.HasCheckConstraint("ck_ann_nombrepersonnesmax", "ann_nombrepersonnesmax > 0");

                    b.HasCheckConstraint("ck_ann_prixparnuit", "ann_prixparnuit > 0");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.CarteBancaire", b =>
                {
                    b.Property<int>("CarteId")
                        .HasColumnType("integer")
                        .HasColumnName("cab_id");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character(16)")
                        .HasColumnName("cab_numero")
                        .IsFixedLength();

                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.HasKey("CarteId")
                        .HasName("pk_cab");

                    b.HasIndex(new[] { "CarteId" }, "cab_pk")
                        .IsUnique();

                    b.HasIndex(new[] { "ProfilId" }, "fk_cab_prf");

                    b.ToTable("t_e_cartebancaire_cab");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Commentaire", b =>
                {
                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.Property<int>("ReservationId")
                        .HasColumnType("integer")
                        .HasColumnName("res_id");

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cmt_contenu");

                    b.HasKey("ProfilId", "ReservationId")
                        .HasName("pk_cmt");

                    b.HasIndex(new[] { "ProfilId" }, "fk_cmt_prf")
                        .IsUnique();

                    b.HasIndex(new[] { "ReservationId" }, "fk_cmt_res")
                        .IsUnique();

                    b.ToTable("t_j_commentaire_cmt");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Departement", b =>
                {
                    b.Property<string>("DepartementCode")
                        .HasMaxLength(3)
                        .HasColumnType("character(3)")
                        .HasColumnName("dep_code")
                        .IsFixedLength();

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("dep_nom");

                    b.HasKey("DepartementCode")
                        .HasName("pk_dep");

                    b.HasIndex(new[] { "DepartementCode" }, "dep_pk")
                        .IsUnique();

                    b.ToTable("t_e_departement_dep");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Equipement", b =>
                {
                    b.Property<int>("EquipementId")
                        .HasColumnType("integer")
                        .HasColumnName("equ_id");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("equ_nom");

                    b.Property<int>("TypeEquipementId")
                        .HasColumnType("integer")
                        .HasColumnName("tye_id");

                    b.HasKey("EquipementId")
                        .HasName("pk_equ");

                    b.HasIndex(new[] { "EquipementId" }, "equ_pk")
                        .IsUnique();

                    b.HasIndex(new[] { "TypeEquipementId" }, "fk_equ_tye");

                    b.ToTable("t_e_equipement_equ");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Favoris", b =>
                {
                    b.Property<int>("AnnonceId")
                        .HasColumnType("integer")
                        .HasColumnName("ann_id");

                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.HasKey("AnnonceId", "ProfilId")
                        .HasName("pk_fav");

                    b.HasIndex(new[] { "AnnonceId" }, "fk_fav_ann")
                        .IsUnique();

                    b.HasIndex(new[] { "ProfilId" }, "fk_fav_prf")
                        .IsUnique();

                    b.ToTable("t_j_favoris_fav");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Photo", b =>
                {
                    b.Property<int>("PhotoId")
                        .HasColumnType("integer")
                        .HasColumnName("pho_id");

                    b.Property<int>("AnnonceId")
                        .HasColumnType("integer")
                        .HasColumnName("ann_id");

                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pho_url");

                    b.HasKey("PhotoId")
                        .HasName("pk_pho");

                    b.HasIndex(new[] { "AnnonceId" }, "fk_pho_ann");

                    b.HasIndex(new[] { "ProfilId" }, "fk_pho_prf");

                    b.HasIndex(new[] { "PhotoId" }, "pho_pk")
                        .IsUnique();

                    b.ToTable("t_e_photo_pho");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.PossedeEquipement", b =>
                {
                    b.Property<int>("AnnonceId")
                        .HasColumnType("integer")
                        .HasColumnName("ann_id");

                    b.Property<int>("EquipementId")
                        .HasColumnType("integer")
                        .HasColumnName("equ_id");

                    b.HasKey("AnnonceId", "EquipementId")
                        .HasName("pk_peq");

                    b.HasIndex(new[] { "AnnonceId" }, "fk_peq_ann")
                        .IsUnique();

                    b.HasIndex(new[] { "EquipementId" }, "fk_peq_equ")
                        .IsUnique();

                    b.ToTable("t_j_possedeequipement_peq");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Profil", b =>
                {
                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.Property<int>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<string>("HashMotDePasse")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("prf_hashmdp");

                    b.Property<string>("Telephone")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("prf_telephone")
                        .IsFixedLength();

                    b.HasKey("ProfilId")
                        .HasName("pk_prf");

                    b.HasIndex(new[] { "AdresseId" }, "fk_prf_adr");

                    b.HasIndex(new[] { "ProfilId" }, "prf_pk")
                        .IsUnique();

                    b.ToTable("t_e_profil_prf");

                    b.HasCheckConstraint("ck_prf_telephone", "prf_telephone LIKE ('06%') or prf_telephone LIKE ('07%')OR prf_telephone IS NULL");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Reglement", b =>
                {
                    b.Property<string>("ReglementId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("rgl_id");

                    b.Property<int>("ReservationId")
                        .HasColumnType("integer")
                        .HasColumnName("res_id");

                    b.HasKey("ReglementId")
                        .HasName("pk_rgl");

                    b.HasIndex(new[] { "ReservationId" }, "fk_rgl_res");

                    b.HasIndex(new[] { "ReglementId" }, "reglements_pk")
                        .IsUnique();

                    b.ToTable("t_e_reglement_rgl");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .HasColumnType("integer")
                        .HasColumnName("res_id");

                    b.Property<int>("AnnonceId")
                        .HasColumnType("integer")
                        .HasColumnName("ann_id");

                    b.Property<DateTime>("DateArrivee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("res_datearrivee")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DateDepart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("res_datedepart")
                        .HasDefaultValueSql("now()+1");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("res_nom");

                    b.Property<int>("NombreVoyageur")
                        .HasColumnType("integer")
                        .HasColumnName("res_nombrevoyageur");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("res_prenom");

                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("res_telephone")
                        .IsFixedLength();

                    b.HasKey("ReservationId")
                        .HasName("pk_res");

                    b.HasIndex(new[] { "AnnonceId" }, "fk_res_ann");

                    b.HasIndex(new[] { "ProfilId" }, "res_fk");

                    b.HasIndex(new[] { "ReservationId" }, "res_pk")
                        .IsUnique();

                    b.ToTable("t_e_reservation_res");

                    b.HasCheckConstraint("ck_res_nombrevoyageur", "res_nombrevoyageur > 0");

                    b.HasCheckConstraint("ck_res_telephone", "res_telephone LIKE ('06%') or res_telephone LIKE ('07%')OR res_telephone IS NULL");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.SecteurActivite", b =>
                {
                    b.Property<int>("SecteurId")
                        .HasColumnType("integer")
                        .HasColumnName("sct_id");

                    b.Property<string>("NomSecteur")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("sct_nomsecteur");

                    b.HasKey("SecteurId")
                        .HasName("pk_sct");

                    b.HasIndex(new[] { "SecteurId" }, "sct_pk")
                        .IsUnique();

                    b.ToTable("t_e_secteuractivite_sct");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Signale", b =>
                {
                    b.Property<int>("ProfilId")
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    b.Property<int>("AnnonceId")
                        .HasColumnType("integer")
                        .HasColumnName("ann_id");

                    b.HasKey("ProfilId", "AnnonceId")
                        .HasName("pk_sig");

                    b.HasIndex(new[] { "AnnonceId" }, "fk_sig_ann")
                        .IsUnique();

                    b.HasIndex(new[] { "ProfilId" }, "fk_sig_prf")
                        .IsUnique();

                    b.ToTable("t_j_signale_sig");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.TypeEquipement", b =>
                {
                    b.Property<int>("TypeEquipementId")
                        .HasColumnType("integer")
                        .HasColumnName("tye_id");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tye_nom");

                    b.HasKey("TypeEquipementId")
                        .HasName("pk_tye");

                    b.HasIndex(new[] { "TypeEquipementId" }, "tye_pk")
                        .IsUnique();

                    b.ToTable("t_e_typeequipement_tye");

                    b.HasCheckConstraint("ck_tye_nom", "tye_nom in ('Equipements', 'Extérieur', 'Services et Accessibilité')");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.TypeLogement", b =>
                {
                    b.Property<int>("TypeLogementId")
                        .HasColumnType("integer")
                        .HasColumnName("tyl_id");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tyl_nom");

                    b.HasKey("TypeLogementId")
                        .HasName("pk_tyl");

                    b.HasIndex(new[] { "TypeLogementId" }, "tyl_pk")
                        .IsUnique();

                    b.ToTable("t_e_typelogement_tyl");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Ville", b =>
                {
                    b.Property<string>("CodeInsee")
                        .HasMaxLength(5)
                        .HasColumnType("character(5)")
                        .HasColumnName("vil_codeinsee")
                        .IsFixedLength();

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character(5)")
                        .HasColumnName("vil_codepostal")
                        .IsFixedLength();

                    b.Property<string>("DepartementCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character(3)")
                        .HasColumnName("dep_code")
                        .IsFixedLength();

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("vil_nom");

                    b.HasKey("CodeInsee")
                        .HasName("pk_vil");

                    b.HasIndex(new[] { "DepartementCode" }, "fk_vil_dep");

                    b.HasIndex(new[] { "CodeInsee" }, "vil_pk")
                        .IsUnique();

                    b.ToTable("t_e_ville_vil");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Admin", b =>
                {
                    b.HasBaseType("LeBonCoinAPI.Models.EntityFramework.Profil");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adm_email");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("adm_service");

                    b.ToTable("t_e_admin_adm");

                    b.HasCheckConstraint("ck_prf_telephone", "prf_telephone LIKE ('06%') or prf_telephone LIKE ('07%')OR prf_telephone IS NULL");

                    b.HasCheckConstraint("ck_adm_email", "adm_email like '%_@__%.__%'");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Entreprise", b =>
                {
                    b.HasBaseType("LeBonCoinAPI.Models.EntityFramework.Profil");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ent_nom");

                    b.Property<int>("SecteurId")
                        .HasColumnType("integer")
                        .HasColumnName("sct_id");

                    b.Property<string>("Siret")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character(14)")
                        .HasColumnName("ent_siret")
                        .IsFixedLength();

                    b.HasIndex(new[] { "SecteurId" }, "fk_ent_sct");

                    b.ToTable("t_e_entreprise_ent");

                    b.HasCheckConstraint("ck_prf_telephone", "prf_telephone LIKE ('06%') or prf_telephone LIKE ('07%')OR prf_telephone IS NULL");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Particulier", b =>
                {
                    b.HasBaseType("LeBonCoinAPI.Models.EntityFramework.Profil");

                    b.Property<string>("Civilite")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("prt_civilite");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("prt_datenaissance");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("prt_email");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prt_nom");

                    b.Property<string>("Prenom")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prt_prenom");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("t_e_particulier_prt");

                    b.HasCheckConstraint("ck_prf_telephone", "prf_telephone LIKE ('06%') or prf_telephone LIKE ('07%')OR prf_telephone IS NULL");

                    b.HasCheckConstraint("ck_prt_civilite", "prt_civilite in ('H', 'F')");

                    b.HasCheckConstraint("ck_prt_email", "prt_email like '%_@__%.__%'");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Adresse", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Ville", "VilleAdresse")
                        .WithMany("AdressesVille")
                        .HasForeignKey("CodeInsee")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_adr_vil");

                    b.Navigation("VilleAdresse");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Annonce", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Adresse", "AdresseAnnonce")
                        .WithMany("AnnoncesAdresse")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ann_adr");

                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Profil", "ProfilAnnonce")
                        .WithMany("AnnoncesProfil")
                        .HasForeignKey("ProfilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ann_prf");

                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.TypeLogement", "TypeLogementAnnonce")
                        .WithMany("AnnoncesTypeLogement")
                        .HasForeignKey("TypeLogementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ann_tyl");

                    b.Navigation("AdresseAnnonce");

                    b.Navigation("ProfilAnnonce");

                    b.Navigation("TypeLogementAnnonce");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.CarteBancaire", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Profil", "ProfilCarteBancaire")
                        .WithMany("CartesBancairesProfil")
                        .HasForeignKey("ProfilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cmt_prf");

                    b.Navigation("ProfilCarteBancaire");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Commentaire", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Profil", "ProfilCommentaire")
                        .WithMany("CommentairesProfil")
                        .HasForeignKey("ProfilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cmt_prf");

                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Reservation", "ReservationCommentaire")
                        .WithMany("CommentairesReservation")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cmt_res");

                    b.Navigation("ProfilCommentaire");

                    b.Navigation("ReservationCommentaire");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Equipement", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.TypeEquipement", "TypeEquipementEquipement")
                        .WithMany("EquipementsTypeEquipement")
                        .HasForeignKey("TypeEquipementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_equ_tye");

                    b.Navigation("TypeEquipementEquipement");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Favoris", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Annonce", "AnnonceFavoris")
                        .WithMany("FavorisAnnonce")
                        .HasForeignKey("AnnonceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_fav_ann");

                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Profil", "ProfilFavoris")
                        .WithMany("FavorisProfil")
                        .HasForeignKey("ProfilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_fav_prf");

                    b.Navigation("AnnonceFavoris");

                    b.Navigation("ProfilFavoris");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Photo", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Annonce", "AnnoncePhoto")
                        .WithMany("PhotosAnnonce")
                        .HasForeignKey("AnnonceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pho_ann");

                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Profil", "ProfilPhoto")
                        .WithMany("PhotosProfil")
                        .HasForeignKey("ProfilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pho_prf");

                    b.Navigation("AnnoncePhoto");

                    b.Navigation("ProfilPhoto");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.PossedeEquipement", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Annonce", "AnnonceEquipementPossede")
                        .WithMany("EquipementsPossedesAnnonce")
                        .HasForeignKey("AnnonceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_peq_ann");

                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Equipement", "EquipementPossede")
                        .WithMany("EquipementsPossedesDesEquipement")
                        .HasForeignKey("EquipementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_peq_equ");

                    b.Navigation("AnnonceEquipementPossede");

                    b.Navigation("EquipementPossede");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Profil", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Adresse", "AdresseProfil")
                        .WithMany("ProfilsAdresse")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_prf_adr");

                    b.Navigation("AdresseProfil");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Reglement", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Reservation", "ReservationReglement")
                        .WithMany("ReglementsReservation")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_rgl_res");

                    b.Navigation("ReservationReglement");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Reservation", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Annonce", "AnnonceReservation")
                        .WithMany("ReservationsAnnonce")
                        .HasForeignKey("AnnonceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_res_ann");

                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Profil", "ProfilReservation")
                        .WithMany("ReservationsProfil")
                        .HasForeignKey("ProfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnnonceReservation");

                    b.Navigation("ProfilReservation");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Signale", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Annonce", "AnnonceSignalement")
                        .WithMany("SignalementsAnnonce")
                        .HasForeignKey("AnnonceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sig_ann");

                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Profil", "ProfilSignalement")
                        .WithMany("SignalementsProfil")
                        .HasForeignKey("ProfilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sig_prf");

                    b.Navigation("AnnonceSignalement");

                    b.Navigation("ProfilSignalement");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Ville", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Departement", "DepartementVille")
                        .WithMany("VillesDepartement")
                        .HasForeignKey("DepartementCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_vil_dep");

                    b.Navigation("DepartementVille");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Admin", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Profil", null)
                        .WithOne()
                        .HasForeignKey("LeBonCoinAPI.Models.EntityFramework.Admin", "ProfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Entreprise", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Profil", null)
                        .WithOne()
                        .HasForeignKey("LeBonCoinAPI.Models.EntityFramework.Entreprise", "ProfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.SecteurActivite", "SecteurActiviteEntreprise")
                        .WithMany("EntreprisesSecteurActivite")
                        .HasForeignKey("SecteurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ent_sct");

                    b.Navigation("SecteurActiviteEntreprise");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Particulier", b =>
                {
                    b.HasOne("LeBonCoinAPI.Models.EntityFramework.Profil", null)
                        .WithOne()
                        .HasForeignKey("LeBonCoinAPI.Models.EntityFramework.Particulier", "ProfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Adresse", b =>
                {
                    b.Navigation("AnnoncesAdresse");

                    b.Navigation("ProfilsAdresse");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Annonce", b =>
                {
                    b.Navigation("EquipementsPossedesAnnonce");

                    b.Navigation("FavorisAnnonce");

                    b.Navigation("PhotosAnnonce");

                    b.Navigation("ReservationsAnnonce");

                    b.Navigation("SignalementsAnnonce");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Departement", b =>
                {
                    b.Navigation("VillesDepartement");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Equipement", b =>
                {
                    b.Navigation("EquipementsPossedesDesEquipement");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Profil", b =>
                {
                    b.Navigation("AnnoncesProfil");

                    b.Navigation("CartesBancairesProfil");

                    b.Navigation("CommentairesProfil");

                    b.Navigation("FavorisProfil");

                    b.Navigation("PhotosProfil");

                    b.Navigation("ReservationsProfil");

                    b.Navigation("SignalementsProfil");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Reservation", b =>
                {
                    b.Navigation("CommentairesReservation");

                    b.Navigation("ReglementsReservation");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.SecteurActivite", b =>
                {
                    b.Navigation("EntreprisesSecteurActivite");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.TypeEquipement", b =>
                {
                    b.Navigation("EquipementsTypeEquipement");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.TypeLogement", b =>
                {
                    b.Navigation("AnnoncesTypeLogement");
                });

            modelBuilder.Entity("LeBonCoinAPI.Models.EntityFramework.Ville", b =>
                {
                    b.Navigation("AdressesVille");
                });
#pragma warning restore 612, 618
        }
    }
}
